<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinochem.yunlian.upm.sso.mapper.IpLogMapper" >
  <resultMap id="BaseResultMap" type="com.sinochem.yunlian.upm.sso.domain.IpLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="application" property="application" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="user_agent" property="userAgent" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, ip, login_name, application, login_time, user_agent
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sinochem.yunlian.upm.sso.domain.IpLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ip_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ip_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ip_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sinochem.yunlian.upm.sso.domain.IpLogExample" >
    delete from ip_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sinochem.yunlian.upm.sso.domain.IpLog" >
    insert into ip_log (id, ip, login_name, 
      application, login_time, user_agent
      )
    values (#{id,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{application,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, #{userAgent,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sinochem.yunlian.upm.sso.domain.IpLog" >
    insert into ip_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="application != null" >
        application,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="userAgent != null" >
        user_agent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="application != null" >
        #{application,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userAgent != null" >
        #{userAgent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sinochem.yunlian.upm.sso.domain.IpLogExample" resultType="java.lang.Integer" >
    select count(*) from ip_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ip_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null" >
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.application != null" >
        application = #{record.application,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userAgent != null" >
        user_agent = #{record.userAgent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ip_log
    set id = #{record.id,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      application = #{record.application,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      user_agent = #{record.userAgent,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinochem.yunlian.upm.sso.domain.IpLog" >
    update ip_log
    <set >
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="application != null" >
        application = #{application,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userAgent != null" >
        user_agent = #{userAgent,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinochem.yunlian.upm.sso.domain.IpLog" >
    update ip_log
    set ip = #{ip,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      application = #{application,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      user_agent = #{userAgent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.sinochem.yunlian.upm.sso.domain.IpLogExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ip_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>